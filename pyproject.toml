[tool.poetry]
name = "biomedical-data-generator"
version = "0.1.0"
description = "Generate synthetic data for data science, machine learning, and statistics."
authors = ["Sigrun May <s.may@ostfalia.de>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/sigrun-may/biomedical-data-generator"
include = ["LICENSE", "Makefile"]
keywords = [
    "artificial data", "synthetic data", "data generation", "data simulation", "data science", "machine learning",
    "statistics", "data analysis"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
]

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/sigrun-may/biomedical-data-generator/issues"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
numpy = ">=1.23"
pyyaml = "*"
pandas = "*"
seaborn = "*"
matplotlib = "*"
statsmodels = "*"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^5.0.0"
coverage = {version="^7.6.0", extras=["toml"]}

[tool.poetry.group.lint.dependencies]
ruff = "^0.13.0"
black = {extras = ["jupyter"], version = "^25.1.0"}

[tool.poetry.group.test.dependencies]
pytest = "*"

[tool.poetry.group.doc.dependencies]
sphinx = "*"
sphinx_rtd_theme = "*"
myst_parser = "*"
sphinx_copybutton = "*"

[tool.black]
line-length = 120
target-version = ["py311"]

[tool.isort]
profile = "black"
lines_after_imports = 2
line_length = 120

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "UP"]

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["biomedical_data_generator"]

[tool.coverage.report]
show_missing = true
skip_empty = true

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "too-many-arguments",
    "too-many-lines",
    "line-too-long",
    "fixme",
    "bare-except",
    "too-many-locals",
    "too-many-branches",
]